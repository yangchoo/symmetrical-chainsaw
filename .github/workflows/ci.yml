name: CI

on: 
  push:
    branches:
    - master
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - '*'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Tox
      run:  |
        python -m pip install --upgrade pip
        pip install tox

    - name: Run Tox
      run: tox -e py
      if: ${{matrix.python-version != 3.6 }}

    - name: Run Tox with coverage
      run: tox -e clean,py
      if: ${{ matrix.python-version == 3.6 }}

  docs:
    name: Docs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install Tox
      run:  |
        python -m pip install --upgrade pip
        pip install tox

    - name: Generate Docs
      run: tox -e docs

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [tests, docs, lint]
    if: startsWith(github.ref, 'refs/tags')

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install pypa/build
      run:  |
        python -m pip install build --user

    - name: Build binary wheel and source tarball
      run:  |
        python -m build --sdist --wheel --outdir dist/

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
   
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN  }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ github.event.head_commit.message }}
        draft: true 
        prerelease: true

